### A Pluto.jl notebook ###
# v0.20.15

using Markdown
using InteractiveUtils

# ╔═╡ 24dcf6da-9aa9-4285-8749-95cdf818df71
begin 
	using Pluto
	# using Plots
	# using Dates
	# using Observables
	# using BenchmarkTools
	# using CSV
	# using DataFrames
	# using Downloads
	# using Statistics
	# using StructArrays
	#----------------------------------------------------------------------
	println("pkgversion(Pluto)         = ", pkgversion(Pluto))
	# println("pkgversion(Plots)         = ", pkgversion(Plots))
	# println("pkgversion(Dates)         = ", pkgversion(Dates))
	# println("pkgversion(Observables)   = ", pkgversion(Observables))
	# println("pkgversion(BenchmarkTools)   = ", pkgversion(BenchmarkTools))
	# println("pkgversion(CSV)           = ", pkgversion(CSV))
	# println("pkgversion(DataFrames)    = ", pkgversion(DataFrames))
	# println("pkgversion(Downloads)     = ", pkgversion(Downloads))
	# println("pkgversion(Statistics)    = ", pkgversion(Statistics))
	# println("pkgversion(StructArrays)  = ", pkgversion(StructArrays))
	#----------------------------------------------------------------------
end # begin

# ╔═╡ 79307f90-7c1e-11f0-10b5-9f94e0be8207
md"
====================================================================================
#### DP&BP\_Ch06\_03\_Performance Patterns\_III: The Shared Array Pattern PtI
##### file: DP&BP\_Ch06\_03\_PerformancePatterns\_III\_PtI
##### code: Julia/Pluto (1.11.6/0.20.15) by PCM *** 2025/08/26 ***

===================================================================================
"

# ╔═╡ 3ee27db2-8db4-4516-91bf-4966877a2290
md"
---
##### 0. Introduction
(Kwong, 2020, p.230)

The *scenario* is like this:

*Here comes the problem - An asset manager has to analyze over $1k$ portfolios, and each portfolio may require to access to return data varying between $10k$ to $50k$ bonds depending on the size of the benchmark index. How can we fully utilize our hardware to perform the analysis as quickly as possible? Unfortunately, the production server is limited in memory but has plenty of CPU resources. How can we fully utilize our hardware to perform the analysis as quickly as possible?* (Kwong, 2020, p.230)
"

# ╔═╡ 36b8f30b-0557-46af-805f-f515bfed0eb6
md"
---
##### 1. Topics
- *portfolio* risk
- *systematic* risk
- *idiosyncratic* risk
- *currency* risk
"

# ╔═╡ cf3b658e-0d5d-4e37-99cc-e020cbb9504e
md"
---
##### 2. Packages
"

# ╔═╡ b91f0716-7e93-41f2-a4eb-49a1ebfabe25
md"
---
##### 3. Code
Kwong's code was developed for Linux/Ubuntu operating systems. We had to adapt the code for Windows 10/11. We used two Surface notebooks: $PCM2017$ and $PCM2021$. Because of the limited sizes of the Surface notebooks we had to *downsize* the problem.
"

# ╔═╡ ad9eb1ef-f823-4b54-a0c9-3a6a480cfa1d
md"""
---
###### 3.1 Preparing Test Data for the Example
(cf. Kwong, 2020, p.230f)

These are the constraints of the *downsized* problem:

- 10K securities (= *nFiles*)
- 5K monte carlo simulated future states (= *nStates*)
- 3 return attributes (= *nAttr*)
- 50 directories
- nFiles * nStates * nAttr * 8 = 10000 * 5000 * 3 * 8 = 1.200.000.000 = 1.2 GiB

- *directories* are located in folder: 
	- on PCM2017: 
		"C:/Home-Cloud/PCM_Book/PCM2025_Book/DP&BP/DP&BP_ch06_data"
	- on PCM2021: 
		"C:/Users/claus/Nextcloud/PCM_Book/PCM2025_Book/DP&BP/DP&BP_ch06_data"
"""

# ╔═╡ 839aedcc-2157-4971-9b7c-e89f738c2de2
begin
	nFiles       = 10000
	nStates      =  5000
	nAttr        =     3
	nDirectories =    50
end # begin

# ╔═╡ 9c350c44-6a1d-482c-9f6e-616cd3636581
pathToDataDirectoryFolder1 =                 # Surface PCM2017
	raw"C:\Home-Cloud\PCM_Book\PCM2025_Book\DP&BP\DP&BP_ch06_data"

# ╔═╡ 598b4f90-de15-4ec8-becd-3243b43bea23
pathToDataDirectoryFolder2 =                 # Surface PCM 2021
	raw"C:\Users\claus\Nextcloud\PCM_Book\PCM2025_Book\DP&BP\DP&BP_ch06_data"

# ╔═╡ 27c0f7b1-bf78-453f-a7cb-fe8e259f9a31
pwd()

# ╔═╡ a53bde3b-e7b2-47ba-8c10-85bcc5457ab2
pathToDataDirectoryFolder = # this working directory
	if pwd() == pathToDataDirectoryFolder1
		println("case I")
		pathToDataDirectoryFolder1
	elseif pwd() == pathToDataDirectoryFolder2
		println("case II")
		pathToDataDirectoryFolder2
	elseif joinpath(pwd(),"DP&BP_ch06_data") == pathToDataDirectoryFolder1
		println("case III")
		pathToDataDirectoryFolder1
	elseif joinpath(pwd(),"DP&BP_ch06_data") == pathToDataDirectoryFolder2
		println("case IV")
		pathToDataDirectoryFolder2
	else
		println("unknown working directory $(joinpath(pwd(),"DP&BP_ch06_data"))")
	end # if

# ╔═╡ 9bc6c97d-802c-43b5-bedc-39810ea7cd5d
pwd()

# ╔═╡ 5ce20665-fe0c-4ce9-a338-c1c82e5051c2
pathToDataDirectoryFolder

# ╔═╡ 3ca0e097-bd01-4ec5-bb16-3260ab69c8ce
try 
	mkdir(pathToDataDirectoryFolder)
catch exception
	println("mkdir(pathToDataDirectoryFolder) failed because: $exception")
end # try-catch

# ╔═╡ 067e2d5b-ffda-48ea-9ad1-40b21fefead2
cd(pathToDataDirectoryFolder)

# ╔═╡ 2528839c-7ff1-4b50-b55e-52d54e804273
pwd()                                            # get the current working directory

# ╔═╡ caf8c874-d7ee-4833-8751-5c27d7c12736
function makeDataDirectories(;nSubdirectories=nDirectories) # Kwong, 2020, p.231
	for i in 0:nSubdirectories-1
		mkdir("$i")
	end # for
end # function makeDataDirectories

# ╔═╡ a42062f2-9c40-42af-b1bb-200ac544b8e9
try 
	makeDataDirectories()
catch exception
	println("directories already exist; message is $exception")
end # try-catch

# ╔═╡ ede719be-906e-4cc4-b7ca-17f9fb50a115
# directories are  
#     in folder: "C:\Home-Cloud\PCM_Book\PCM2025_Book\DP&BP\DP&BP_ch06_data"
#  or in:     "C:\Users\claus\Nextcloud\PCM_Book\PCM2025_Book\DP&BP\DP&BP_ch06_data"
#-----------------------------------------------------------------------------------
myDirectoryFolder =                         # folders are ...
	filter(name -> isdir(name), readdir())  # look after directories

# ╔═╡ 59376f0f-4cc0-42b3-bd21-9b294fd69e44
function locateFileOfSecurity(index)        # securities are distributed
	id = index - 1                          #   across directories
	directory = string(id % 50)
	joinpath(directory, "security$(id).dat")
end # function locateFileOfSecurity

# ╔═╡ c28ec587-a61b-4e72-bc84-f41a10b788fe
locateFileOfSecurity.(vcat(1:2, 50:51))

# ╔═╡ 220160f0-3ecb-45c2-9a51-7cde6c8f6c85
pathToDataDirectoryFolder                   # path to the data folder

# ╔═╡ ee4c48df-c807-4e76-a6df-8bc724b1d375
A = rand(10, 3)                             # make small test matrix A

# ╔═╡ 49a0bc43-6549-4ed0-85f1-7698c27040f6
typeof(A)

# ╔═╡ 1439798f-d77d-40e1-bef4-a35112b9d434
function generateTestData(
	; nFiles=nFiles, nFutureStates::Int64=nStates, nSourcesOfReturns::Int64=nAttr)
	#-----------------------------------------------------------------------------
	for i in 1:nFiles
		# typeof(A) Matrix{Float64}
		A = rand(nFutureStates::Int, nSourcesOfReturns::Int)::Matrix{Float64}
		file = locateFileOfSecurity(i)
		println("------------------------")
		println("file = $file") 
		println("typeof(A) = $(typeof(A))")
		#= Kwong's code ...
			open(file, "w") do io  
				write(io, A)     
			end # open do
		... is replaced by open(io -> write(io, A), file, "w")
		=#
		open(io -> write(io, A), file, "w")
		for j in 1:nFutureStates
			if (1 <= j <= 2) || (nFutureStates-1 <= j <= nFutureStates)
				Aj = A[j, :]
				println("row $j: $Aj")
			end # if
		end # for j
	end # for i
	#----------------------------------------------------------------------------
end # function generateTestData

# ╔═╡ f711ff9e-ee32-4bc0-96f7-fe316068993d
generateTestData()

# ╔═╡ 82aa463a-7647-4350-81d9-3f6b952243ef
function readTestData(
	; nFiles=nFiles, nFutureStates::Int64=nStates, nSourcesOfReturns::Int64=nAttr)
	for i in 1:nFiles
		file = locateFileOfSecurity(i)
		println("------------------------")
		println("file = $file") 
		data = Matrix{Float64}(undef, nFutureStates, nSourcesOfReturns)
		open(io -> read!(io::IO, data), file, "r")
		for j in 1:nFutureStates
			if (1 <= j <= 2) || (nFutureStates-1 <= j <= nFutureStates)
				dataj = data[j, :]
				println("row $j: $dataj")
			end # if
		end # for j
	end # for i
end # function readTestData

# ╔═╡ 2d01a726-9fd1-4886-8cf6-6e7026ce52d1
readTestData()

# ╔═╡ db848019-b61f-485e-96f1-b5cab853113c
md"
---
##### 4. Summary
"

# ╔═╡ 8823b6c9-ca63-4a12-8467-620c869811b8
md"
---
##### 5. References

- **Kwong, T.**; *Hands On Design Patterns and Best Practices*, Birmingham, UK: Packt, 2020

"

# ╔═╡ c372d058-afe8-42b2-9793-62358ad81c86
md"
====================================================================================

This is a **draft** under the Attribution-NonCommercial-ShareAlike 4.0 International **(CC BY-NC-SA 4.0)** license. Comments, suggestions for improvement and bug reports are welcome: **claus.moebus(@)uol.de**

==================================================================================
"

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
Pluto = "c3e4b0f8-55cb-11ea-2926-15256bba5781"

[compat]
Pluto = "~0.20.15"
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.11.6"
manifest_format = "2.0"
project_hash = "81cb1de5a23a9922a996456426eab983acedb720"

[[deps.ArgTools]]
uuid = "0dad84c5-d112-42e6-8d28-ef12dabb789f"
version = "1.1.2"

[[deps.Artifacts]]
uuid = "56f22d72-fd6d-98f1-02f0-08ddc0907c33"
version = "1.11.0"

[[deps.Base64]]
uuid = "2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"
version = "1.11.0"

[[deps.BitFlags]]
git-tree-sha1 = "0691e34b3bb8be9307330f88d1a3c3f25466c24d"
uuid = "d1d4a3ce-64b1-5f1a-9ba4-7e7e69966f35"
version = "0.1.9"

[[deps.CodecZlib]]
deps = ["TranscodingStreams", "Zlib_jll"]
git-tree-sha1 = "962834c22b66e32aa10f7611c08c8ca4e20749a9"
uuid = "944b1d66-785c-5afd-91f1-9de20f533193"
version = "0.7.8"

[[deps.Compat]]
deps = ["TOML", "UUIDs"]
git-tree-sha1 = "0037835448781bb46feb39866934e243886d756a"
uuid = "34da2185-b29b-5c13-b0c7-acf172513d20"
version = "4.18.0"

    [deps.Compat.extensions]
    CompatLinearAlgebraExt = "LinearAlgebra"

    [deps.Compat.weakdeps]
    Dates = "ade2ca70-3891-5945-98fb-dc099432e06a"
    LinearAlgebra = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"

[[deps.ConcurrentUtilities]]
deps = ["Serialization", "Sockets"]
git-tree-sha1 = "d9d26935a0bcffc87d2613ce14c527c99fc543fd"
uuid = "f0e56b4a-5159-44fe-b623-3e5288b988bb"
version = "2.5.0"

[[deps.Configurations]]
deps = ["ExproniconLite", "OrderedCollections", "TOML"]
git-tree-sha1 = "4358750bb58a3caefd5f37a4a0c5bfdbbf075252"
uuid = "5218b696-f38b-4ac9-8b61-a12ec717816d"
version = "0.17.6"

[[deps.DataAPI]]
git-tree-sha1 = "abe83f3a2f1b857aac70ef8b269080af17764bbe"
uuid = "9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a"
version = "1.16.0"

[[deps.DataValueInterfaces]]
git-tree-sha1 = "bfc1187b79289637fa0ef6d4436ebdfe6905cbd6"
uuid = "e2d170a0-9d28-54be-80f0-106bbe20a464"
version = "1.0.0"

[[deps.Dates]]
deps = ["Printf"]
uuid = "ade2ca70-3891-5945-98fb-dc099432e06a"
version = "1.11.0"

[[deps.Distributed]]
deps = ["Random", "Serialization", "Sockets"]
uuid = "8ba89e20-285c-5b6f-9357-94700520ee1b"
version = "1.11.0"

[[deps.Downloads]]
deps = ["ArgTools", "FileWatching", "LibCURL", "NetworkOptions"]
uuid = "f43a241f-c20a-4ad4-852c-f6b1247861c6"
version = "1.6.0"

[[deps.ExceptionUnwrapping]]
deps = ["Test"]
git-tree-sha1 = "d36f682e590a83d63d1c7dbd287573764682d12a"
uuid = "460bff9d-24e4-43bc-9d9f-a8973cb893f4"
version = "0.1.11"

[[deps.ExpressionExplorer]]
git-tree-sha1 = "4a8c0a9eebf807ac42f0f6de758e60a20be25ffb"
uuid = "21656369-7473-754a-2065-74616d696c43"
version = "1.1.3"

[[deps.ExproniconLite]]
git-tree-sha1 = "c13f0b150373771b0fdc1713c97860f8df12e6c2"
uuid = "55351af7-c7e9-48d6-89ff-24e801d99491"
version = "0.10.14"

[[deps.FileWatching]]
uuid = "7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee"
version = "1.11.0"

[[deps.GracefulPkg]]
deps = ["Compat", "Pkg", "TOML"]
git-tree-sha1 = "698050b04f3cc0906d0817329d6e96484bf238eb"
uuid = "828d9ff0-206c-6161-646e-6576656f7244"
version = "2.3.0"

[[deps.HTTP]]
deps = ["Base64", "CodecZlib", "ConcurrentUtilities", "Dates", "ExceptionUnwrapping", "Logging", "LoggingExtras", "MbedTLS", "NetworkOptions", "OpenSSL", "PrecompileTools", "Random", "SimpleBufferStream", "Sockets", "URIs", "UUIDs"]
git-tree-sha1 = "ed5e9c58612c4e081aecdb6e1a479e18462e041e"
uuid = "cd3eb016-35fb-5094-929b-558a96fad6f3"
version = "1.10.17"

[[deps.HypertextLiteral]]
deps = ["Tricks"]
git-tree-sha1 = "7134810b1afce04bbc1045ca1985fbe81ce17653"
uuid = "ac1192a8-f4b3-4bfe-ba22-af5b92cd3ab2"
version = "0.9.5"

[[deps.InteractiveUtils]]
deps = ["Markdown"]
uuid = "b77e0a4c-d291-57a0-90e8-8db25a27a240"
version = "1.11.0"

[[deps.IteratorInterfaceExtensions]]
git-tree-sha1 = "a3f24677c21f5bbe9d2a714f95dcd58337fb2856"
uuid = "82899510-4779-5014-852e-03e436cf321d"
version = "1.0.0"

[[deps.JLLWrappers]]
deps = ["Artifacts", "Preferences"]
git-tree-sha1 = "0533e564aae234aff59ab625543145446d8b6ec2"
uuid = "692b3bcd-3c85-4b1f-b108-f13ce0eb3210"
version = "1.7.1"

[[deps.LRUCache]]
git-tree-sha1 = "5519b95a490ff5fe629c4a7aa3b3dfc9160498b3"
uuid = "8ac3fa9e-de4c-5943-b1dc-09c6b5f20637"
version = "1.6.2"
weakdeps = ["Serialization"]

    [deps.LRUCache.extensions]
    SerializationExt = ["Serialization"]

[[deps.LazilyInitializedFields]]
git-tree-sha1 = "0f2da712350b020bc3957f269c9caad516383ee0"
uuid = "0e77f7df-68c5-4e49-93ce-4cd80f5598bf"
version = "1.3.0"

[[deps.LibCURL]]
deps = ["LibCURL_jll", "MozillaCACerts_jll"]
uuid = "b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"
version = "0.6.4"

[[deps.LibCURL_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll", "Zlib_jll", "nghttp2_jll"]
uuid = "deac9b47-8bc7-5906-a0fe-35ac56dc84c0"
version = "8.6.0+0"

[[deps.LibGit2]]
deps = ["Base64", "LibGit2_jll", "NetworkOptions", "Printf", "SHA"]
uuid = "76f85450-5226-5b5a-8eaa-529ad045b433"
version = "1.11.0"

[[deps.LibGit2_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll"]
uuid = "e37daf67-58a4-590a-8e99-b0245dd2ffc5"
version = "1.7.2+0"

[[deps.LibSSH2_jll]]
deps = ["Artifacts", "Libdl", "MbedTLS_jll"]
uuid = "29816b5a-b9ab-546f-933c-edad1886dfa8"
version = "1.11.0+1"

[[deps.Libdl]]
uuid = "8f399da3-3557-5675-b5ff-fb832c97cbdb"
version = "1.11.0"

[[deps.Logging]]
uuid = "56ddb016-857b-54e1-b83d-db4d58db5568"
version = "1.11.0"

[[deps.LoggingExtras]]
deps = ["Dates", "Logging"]
git-tree-sha1 = "f02b56007b064fbfddb4c9cd60161b6dd0f40df3"
uuid = "e6f89c97-d47a-5376-807f-9c37f3926c36"
version = "1.1.0"

[[deps.MIMEs]]
git-tree-sha1 = "c64d943587f7187e751162b3b84445bbbd79f691"
uuid = "6c6e2e6c-3030-632d-7369-2d6c69616d65"
version = "1.1.0"

[[deps.Malt]]
deps = ["Distributed", "Logging", "RelocatableFolders", "Serialization", "Sockets"]
git-tree-sha1 = "636abf4fb184be05888dacc0b636fe0911d6d746"
uuid = "36869731-bdee-424d-aa32-cab38c994e3b"
version = "1.2.0"

[[deps.Markdown]]
deps = ["Base64"]
uuid = "d6f4376e-aef5-505a-96c1-9c027394607a"
version = "1.11.0"

[[deps.MbedTLS]]
deps = ["Dates", "MbedTLS_jll", "MozillaCACerts_jll", "NetworkOptions", "Random", "Sockets"]
git-tree-sha1 = "c067a280ddc25f196b5e7df3877c6b226d390aaf"
uuid = "739be429-bea8-5141-9913-cc70e7f3736d"
version = "1.1.9"

[[deps.MbedTLS_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "c8ffd9c3-330d-5841-b78e-0817d7145fa1"
version = "2.28.6+0"

[[deps.MozillaCACerts_jll]]
uuid = "14a3606d-f60d-562e-9121-12d972cd8159"
version = "2023.12.12"

[[deps.MsgPack]]
deps = ["Serialization"]
git-tree-sha1 = "f5db02ae992c260e4826fe78c942954b48e1d9c2"
uuid = "99f44e22-a591-53d1-9472-aa23ef4bd671"
version = "1.2.1"

[[deps.NetworkOptions]]
uuid = "ca575930-c2e3-43a9-ace4-1e988b2c1908"
version = "1.2.0"

[[deps.OpenSSL]]
deps = ["BitFlags", "Dates", "MozillaCACerts_jll", "OpenSSL_jll", "Sockets"]
git-tree-sha1 = "f1a7e086c677df53e064e0fdd2c9d0b0833e3f6e"
uuid = "4d8831e6-92b7-49fb-bdf8-b643e874388c"
version = "1.5.0"

[[deps.OpenSSL_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "2ae7d4ddec2e13ad3bddf5c0796f7547cf682391"
uuid = "458c3c95-2e84-50aa-8efc-19380b2a3a95"
version = "3.5.2+0"

[[deps.OrderedCollections]]
git-tree-sha1 = "05868e21324cede2207c6f0f466b4bfef6d5e7ee"
uuid = "bac558e1-5e72-5ebc-8fee-abe8a469f55d"
version = "1.8.1"

[[deps.Pkg]]
deps = ["Artifacts", "Dates", "Downloads", "FileWatching", "LibGit2", "Libdl", "Logging", "Markdown", "Printf", "Random", "SHA", "TOML", "Tar", "UUIDs", "p7zip_jll"]
uuid = "44cfe95a-1eb2-52ea-b672-e2afdf69b78f"
version = "1.11.0"
weakdeps = ["REPL"]

    [deps.Pkg.extensions]
    REPLExt = "REPL"

[[deps.Pluto]]
deps = ["Base64", "Configurations", "Dates", "Downloads", "ExpressionExplorer", "FileWatching", "GracefulPkg", "HTTP", "HypertextLiteral", "InteractiveUtils", "LRUCache", "Logging", "LoggingExtras", "MIMEs", "Malt", "Markdown", "MsgPack", "Pkg", "PlutoDependencyExplorer", "PrecompileSignatures", "PrecompileTools", "REPL", "RegistryInstances", "RelocatableFolders", "Scratch", "Sockets", "TOML", "Tables", "URIs", "UUIDs"]
git-tree-sha1 = "6f5b316f990235ebbaca22a26e559eff010f6233"
uuid = "c3e4b0f8-55cb-11ea-2926-15256bba5781"
version = "0.20.15"

[[deps.PlutoDependencyExplorer]]
deps = ["ExpressionExplorer", "InteractiveUtils", "Markdown"]
git-tree-sha1 = "c3e5073a977b1c58b2d55c1ec187c3737e64e6af"
uuid = "72656b73-756c-7461-726b-72656b6b696b"
version = "1.2.2"

[[deps.PrecompileSignatures]]
git-tree-sha1 = "18ef344185f25ee9d51d80e179f8dad33dc48eb1"
uuid = "91cefc8d-f054-46dc-8f8c-26e11d7c5411"
version = "3.0.3"

[[deps.PrecompileTools]]
deps = ["Preferences"]
git-tree-sha1 = "5aa36f7049a63a1528fe8f7c3f2113413ffd4e1f"
uuid = "aea7be01-6a6a-4083-8856-8a6e6704d82a"
version = "1.2.1"

[[deps.Preferences]]
deps = ["TOML"]
git-tree-sha1 = "0f27480397253da18fe2c12a4ba4eb9eb208bf3d"
uuid = "21216c6a-2e73-6563-6e65-726566657250"
version = "1.5.0"

[[deps.Printf]]
deps = ["Unicode"]
uuid = "de0858da-6303-5e67-8744-51eddeeeb8d7"
version = "1.11.0"

[[deps.REPL]]
deps = ["InteractiveUtils", "Markdown", "Sockets", "StyledStrings", "Unicode"]
uuid = "3fa0cd96-eef1-5676-8a61-b3b8758bbffb"
version = "1.11.0"

[[deps.Random]]
deps = ["SHA"]
uuid = "9a3f8284-a2c9-5f02-9a11-845980a1fd5c"
version = "1.11.0"

[[deps.RegistryInstances]]
deps = ["LazilyInitializedFields", "Pkg", "TOML", "Tar"]
git-tree-sha1 = "ffd19052caf598b8653b99404058fce14828be51"
uuid = "2792f1a3-b283-48e8-9a74-f99dce5104f3"
version = "0.1.0"

[[deps.RelocatableFolders]]
deps = ["SHA", "Scratch"]
git-tree-sha1 = "ffdaf70d81cf6ff22c2b6e733c900c3321cab864"
uuid = "05181044-ff0b-4ac5-8273-598c1e38db00"
version = "1.0.1"

[[deps.SHA]]
uuid = "ea8e919c-243c-51af-8825-aaa63cd721ce"
version = "0.7.0"

[[deps.Scratch]]
deps = ["Dates"]
git-tree-sha1 = "9b81b8393e50b7d4e6d0a9f14e192294d3b7c109"
uuid = "6c6a2e73-6563-6170-7368-637461726353"
version = "1.3.0"

[[deps.Serialization]]
uuid = "9e88b42a-f829-5b0c-bbe9-9e923198166b"
version = "1.11.0"

[[deps.SimpleBufferStream]]
git-tree-sha1 = "f305871d2f381d21527c770d4788c06c097c9bc1"
uuid = "777ac1f9-54b0-4bf8-805c-2214025038e7"
version = "1.2.0"

[[deps.Sockets]]
uuid = "6462fe0b-24de-5631-8697-dd941f90decc"
version = "1.11.0"

[[deps.StyledStrings]]
uuid = "f489334b-da3d-4c2e-b8f0-e476e12c162b"
version = "1.11.0"

[[deps.TOML]]
deps = ["Dates"]
uuid = "fa267f1f-6049-4f14-aa54-33bafae1ed76"
version = "1.0.3"

[[deps.TableTraits]]
deps = ["IteratorInterfaceExtensions"]
git-tree-sha1 = "c06b2f539df1c6efa794486abfb6ed2022561a39"
uuid = "3783bdb8-4a98-5b6b-af9a-565f29a5fe9c"
version = "1.0.1"

[[deps.Tables]]
deps = ["DataAPI", "DataValueInterfaces", "IteratorInterfaceExtensions", "OrderedCollections", "TableTraits"]
git-tree-sha1 = "f2c1efbc8f3a609aadf318094f8fc5204bdaf344"
uuid = "bd369af6-aec1-5ad0-b16a-f7cc5008161c"
version = "1.12.1"

[[deps.Tar]]
deps = ["ArgTools", "SHA"]
uuid = "a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"
version = "1.10.0"

[[deps.Test]]
deps = ["InteractiveUtils", "Logging", "Random", "Serialization"]
uuid = "8dfed614-e22c-5e08-85e1-65c5234f0b40"
version = "1.11.0"

[[deps.TranscodingStreams]]
git-tree-sha1 = "0c45878dcfdcfa8480052b6ab162cdd138781742"
uuid = "3bb67fe8-82b1-5028-8e26-92a6c54297fa"
version = "0.11.3"

[[deps.Tricks]]
git-tree-sha1 = "372b90fe551c019541fafc6ff034199dc19c8436"
uuid = "410a4b4d-49e4-4fbc-ab6d-cb71b17b3775"
version = "0.1.12"

[[deps.URIs]]
git-tree-sha1 = "bef26fb046d031353ef97a82e3fdb6afe7f21b1a"
uuid = "5c2747f8-b7ea-4ff2-ba2e-563bfd36b1d4"
version = "1.6.1"

[[deps.UUIDs]]
deps = ["Random", "SHA"]
uuid = "cf7118a7-6976-5b1a-9a39-7adc72f591a4"
version = "1.11.0"

[[deps.Unicode]]
uuid = "4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"
version = "1.11.0"

[[deps.Zlib_jll]]
deps = ["Libdl"]
uuid = "83775a58-1f1d-513f-b197-d71354ab007a"
version = "1.2.13+1"

[[deps.nghttp2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850ede-7688-5339-a07c-302acd2aaf8d"
version = "1.59.0+0"

[[deps.p7zip_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "3f19e933-33d8-53b3-aaab-bd5110c3b7a0"
version = "17.4.0+2"
"""

# ╔═╡ Cell order:
# ╟─79307f90-7c1e-11f0-10b5-9f94e0be8207
# ╟─3ee27db2-8db4-4516-91bf-4966877a2290
# ╟─36b8f30b-0557-46af-805f-f515bfed0eb6
# ╟─cf3b658e-0d5d-4e37-99cc-e020cbb9504e
# ╠═24dcf6da-9aa9-4285-8749-95cdf818df71
# ╟─b91f0716-7e93-41f2-a4eb-49a1ebfabe25
# ╟─ad9eb1ef-f823-4b54-a0c9-3a6a480cfa1d
# ╠═839aedcc-2157-4971-9b7c-e89f738c2de2
# ╠═9c350c44-6a1d-482c-9f6e-616cd3636581
# ╠═598b4f90-de15-4ec8-becd-3243b43bea23
# ╠═27c0f7b1-bf78-453f-a7cb-fe8e259f9a31
# ╠═a53bde3b-e7b2-47ba-8c10-85bcc5457ab2
# ╠═9bc6c97d-802c-43b5-bedc-39810ea7cd5d
# ╠═5ce20665-fe0c-4ce9-a338-c1c82e5051c2
# ╠═3ca0e097-bd01-4ec5-bb16-3260ab69c8ce
# ╠═067e2d5b-ffda-48ea-9ad1-40b21fefead2
# ╠═2528839c-7ff1-4b50-b55e-52d54e804273
# ╠═caf8c874-d7ee-4833-8751-5c27d7c12736
# ╠═a42062f2-9c40-42af-b1bb-200ac544b8e9
# ╠═ede719be-906e-4cc4-b7ca-17f9fb50a115
# ╠═59376f0f-4cc0-42b3-bd21-9b294fd69e44
# ╠═c28ec587-a61b-4e72-bc84-f41a10b788fe
# ╠═220160f0-3ecb-45c2-9a51-7cde6c8f6c85
# ╠═ee4c48df-c807-4e76-a6df-8bc724b1d375
# ╠═49a0bc43-6549-4ed0-85f1-7698c27040f6
# ╠═1439798f-d77d-40e1-bef4-a35112b9d434
# ╠═f711ff9e-ee32-4bc0-96f7-fe316068993d
# ╠═82aa463a-7647-4350-81d9-3f6b952243ef
# ╠═2d01a726-9fd1-4886-8cf6-6e7026ce52d1
# ╟─db848019-b61f-485e-96f1-b5cab853113c
# ╟─8823b6c9-ca63-4a12-8467-620c869811b8
# ╟─c372d058-afe8-42b2-9793-62358ad81c86
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
